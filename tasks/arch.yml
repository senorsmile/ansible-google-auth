---
# Defines tasks applicable for Google Authenticator
# Ubuntu trusty version, uses standard libpam-google-authenticator package

#- name: Install google-authenticator
#  apacman:
#    name: "{{ item }}"
#    state: 'present'
#  with_items:
#    - 'libpam-google-authenticator'
#    #- 'libpam0g-dev'
#    #- libqrencode3

#TODO: finish implementation
#- name: Update sshd config to enable challenge responses
#  lineinfile:
#    dest: /etc/ssh/sshd_config
#    regexp: ^ChallengeResponseAuthentication
#    line: "ChallengeResponseAuthentication yes"
#    state: present
#  notify: restart ssh
#
#- name: Add Google authenticator to PAM
#  lineinfile: 
#    dest: /etc/pam.d/sshd
#    line: "auth required pam_google_authenticator.so"
#    insertbefore: BOF
#    state: present
#
#- name: Generate a timed-based, no reuse, rate-limited (3 logins per 30 seconds) with one concurrently valid code for default user
#  shell: su - "{{ item }}" '-c /usr/bin/google-authenticator -t -f -d --label="{{ item }}@{{ domain }}" --qr-mode=ANSI -r 3 -R 30 -w 1 --secret=/home/{{ item }}/.google_authenticator'
#    creates="/home/{{ item }}/.google_authenticator"
#  #sudo: yes
#  #sudo_user: "{{ item }}"
#  with_items:
#    - "{{ google_auth_users }}"
#
#- name: Retrieve generated keys from server
#  fetch: 
#    src: /home/{{ item }}/.google_authenticator
#    dest: /tmp/google-auth-files.{{ item }}
#  with_items:
#    - "{{ google_auth_users }}"


- pause: 
    seconds: 5
    prompt: "Your Google Authentication keys are in /tmp/sovereign-google-auth-files. Press any key to continue..."

